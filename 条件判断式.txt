单层、简单条件判断式
	if [ 条件判断式 ]; then
		当条件判断式成立时，可以进行的指令工作内容；
	fi  <==将 if 反过来写，就成为 fi 啦！结束 if 之意！

	多个表达式时使用连接符:
		
		&& 代表 AND ；
		|| 代表 or ；

		[ "${yn}" == "Y" -o "${yn}" == "y" ]
		上式可替换为
		[ "${yn}" == "Y" ] || [ "${yn}" == "y" ]

多重、复杂条件判断式
	# 多个条件判断 (if ... elif ... elif ... else) 分多种不同情况执行
	if [ 条件判断式一 ]; then
		当条件判断式一成立时，可以进行的指令工作内容；
	elif [ 条件判断式二 ]; then
		当条件判断式二成立时，可以进行的指令工作内容；
	else
		当条件判断式一与二均不成立时，可以进行的指令工作内容；
	fi

利用  case ..... esac  判断
	case $变量名称 in  <==关键词为 case ，还有变数前有钱字号

	"第一个变量内容")  <==每个变量内容建议用双引号括起来，关键词则为小括号 )
		程序段
		;;  <==每个类别结尾使用两个连续的分号来处理！

	"第二个变量内容")
		程序段
		;;

	*)  <==最后一个变量内容都会用 * 来代表所有其他值
		不包含第一个变量内容与第二个变量内容的其他程序执行段
		exit 1
	;;
	esac

